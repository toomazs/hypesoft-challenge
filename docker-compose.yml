services:
  # Banco de dados MongoDB
  mongo:
    image: mongo:5.0
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
    networks:
      - hypesoft-net
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --username admin --password password123 --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Interface visual para o MongoDB
  mongo-express:
    image: mongo-express:0.54
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password123
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password123@mongo:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - hypesoft-net

  # Keycloak para autenticação
  keycloak:
    image: quay.io/keycloak/keycloak:25.0.1
    container_name: keycloak
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak-import.json:/opt/keycloak/data/import/keycloak-import.json:ro
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin123
      - KC_HOSTNAME=localhost
      - KC_HTTP_ENABLED=true
      - KC_PROXY=edge
    command: start-dev --import-realm
    networks:
      - hypesoft-net

  # API Backend em .NET
  backend:
    container_name: hypesoft-api
    build:
      context: ./backend
      dockerfile: src/Hypesoft.API/Dockerfile
    expose:
      - "8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - MONGO_CONNECTION_STRING=mongodb://admin:password123@mongo:27017
      - MONGO_DATABASE_NAME=ShopSenseDb
      - KEYCLOAK_AUTHORITY=http://localhost:8080/realms/hypesoft
      - KEYCLOAK_AUDIENCE=hypesoft-api
    depends_on:
      mongo:
        condition: service_healthy
      keycloak:
        condition: service_started
    networks:
      - hypesoft-net

  # Frontend em Next.js
  frontend:
    container_name: hypesoft-web
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000/api
      - NEXT_PUBLIC_KEYCLOAK_URL=http://localhost:8080
      - NEXT_PUBLIC_KEYCLOAK_REALM=hypesoft
      - NEXT_PUBLIC_KEYCLOAK_CLIENT_ID=hypesoft-frontend
    depends_on:
      - backend
    networks:
      - hypesoft-net

  # Nginx como Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "3000:80"
      - "5000:5000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - hypesoft-net

# Volumes para persistência de dados
volumes:
  mongo-data:
    driver: local

# Rede para comunicação
networks:
  hypesoft-net:
    driver: bridge